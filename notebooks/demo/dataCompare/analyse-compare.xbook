[{"kind":1,"language":"markdown","value":"# Introducing XPath Notebooks"},{"kind":1,"language":"markdown","value":"## XML Compare Sample\nDeclare a function that returns the value for the version specified by `$delta` of leaf-element `$element`"},{"kind":2,"language":"xpath","value":"variable = version %\nfunction($element, $delta) { \n  string(($element/deltaxml:textGroup/deltaxml:text[@deltaxml:deltaV2 eq $delta], $element)[1])\n}"},{"kind":1,"language":"markdown","value":"For each each `person` element, get the values (using `$version` function defined in previous cell) for the child leaf-node elements."},{"kind":2,"language":"xpath","value":"for $person in /contacts/person return (\n    for $d in $person//*[not(self::deltaxml:*) and empty(* except deltaxml:*)] return\n      map {\n        'Field': name($d),\n        'OK': (if ($d/deltaxml:*) then '✘' else '✔︎'),\n        'A': $version($d, 'A'),\n        'B': $version($d, 'B'),\n        'Position': string($person/@deltaxml:original-position)\n      },\n      if (position() eq last()) then \n        map {'Field': '-', 'OK': '', 'A': '', 'B': '', 'Position': ''} \n      else ()\n  )"},{"kind":2,"language":"xpath","value":"/contacts/person//*[not(self::deltaxml:*) and empty(* except deltaxml:*)]! (., string-join(text()[1], '/'))"}]